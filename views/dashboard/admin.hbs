<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/modules/data.js"></script>
<script src="https://code.highcharts.com/modules/exporting.js"></script>

<div class="card">
  <header class="card-header">
    <p class="card-header-title">RAM Usage</p>
  </header>
  <div class="card-table">
    <div class="content">
      <div class="graph" id="ramUsage"></div>
    </div>
  </div>
</div>

<script>
Highcharts.setOptions({
  global: {
    useUTC: false
  }
});

const ramUsage = Highcharts.chart("ramUsage", {
  chart: {},
  title: {
    text: null
  },
  credits: {
    enabled: false
  },
  xAxis: {
    type: "datetime"
  },
  yAxis: {
    title: {
      text: null
    },
    allowDecimals: false,
    min: 0
  },
  plotOptions: {
    series: {
      pointStart: Date.now() - 300000 * 95,
      pointInterval: 300000
    }
  },
  series: [{
    name: "Node.js RAM Usage",
    data: [],
    color: "#aeff42",
    tooltip: {
      pointFormat: "Total RAM: {point.y} MB"
    },
  }, {
    name: "RAM Usage",
    data: [],
    color: "#323233",
    tooltip: {
      pointFormat: "RAM: {point.y} MB"
    },
  }],
  navigation: {
    buttonOptions: {
      enabled: false
    }
  }
});

function requestData() {
  $.ajax({
    url: '{{url '/dashboard/admin/statistics/json'}}',
    success: function(point) {
      if (arrayEquals(ramUsage.series[0], point.prc) === false) ramUsage.series[0].addPoint(point.prc[95], true, true);
      if (arrayEquals(ramUsage.series[1], point.ram) === false) ramUsage.series[1].addPoint(point.ram[95], true, true);
      console.log(`[GET] Updating charts. PRC: ${point.prc[95]} | RAM: ${point.ram[95]}`);
      setTimeout(requestData, 60000);
    },
    cache: false
  });
}

function arrayEquals(chart, newA) {
  if (chart.data.length !== newA.length) return false;
  for (let i = 0; i < chart.data.length; i++) {
    if (chart.data[i].y !== newA[i]) return false;
  }
  return true;
}

document.addEventListener("DOMContentLoaded", function(event) {
  var prc = "{{statistics.prc}}".split(',').map(s => Number(s));
  var ram = "{{statistics.ram}}".split(',').map(s => Number(s));

  ramUsage.series[0].setData(prc, true);
  ramUsage.series[1].setData(ram, true);
  setTimeout(requestData, 60000);
});
</script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-easing/1.3/jquery.easing.min.js"></script>
